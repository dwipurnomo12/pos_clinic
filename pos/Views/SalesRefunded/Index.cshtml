@model List<pos.Models.SalesRefunded>
@{
    ViewData["Title"] = "List Sales Refunded";
}

@Html.Partial("/Views/SalesRefunded/Create.cshtml")
@Html.Partial("/Views/SalesRefunded/Edit.cshtml")

<div class="content-wrapper">
    <div class="page-header">
        <h3 class="page-title">
            <span class="page-title-icon bg-gradient-primary text-white me-2">
                <i class="mdi mdi-invoice-list-outline"></i>
            </span>
            Sales Refunded
        </h3>
        <nav aria-label="breadcrumb">
            <ul class="breadcrumb">
                <li class="breadcrumb-item active" aria-current="page">
                    <span></span>Sales Refunded
                    <i class="mdi mdi-alert-circle-outline icon-sm text-primary align-middle"></i>
                </li>
            </ul>
        </nav>
    </div>

    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-md-6">
                            <h4 class="card-title">List Sales Refunded</h4>
                        </div>
                        <div class="col-md-6">
                            <a id="btn_add_sales_refunded" class="btn btn-primary float-end">Add Data</a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="table_id" class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th class="text-start">@Html.DisplayName("#")</th>
                                    <th class="text-start">@Html.DisplayName("Item")</th>
                                    <th class="text-start">@Html.DisplayName("Stock Refunded")</th>
                                    <th class="text-start">@Html.DisplayName("Information")</th>
                                    <th class="text-start">@Html.DisplayName("Options")</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Initialize DataTable
        let table = $('#table_id').DataTable();

        // Function to load and populate the DataTable
        function loadDataTable() {
            $.ajax({
                url: "SalesRefunded/GetSalesRefunded",
                type: "GET",
                dataType: "JSON",
                success: function (response) {
                    table.clear(); // Clear existing rows
                    $.each(response.data, function (key, value) {
                        let data = `
                            <tr class="data-row" id="index_${value.id}">
                                <td class="text-start">${key + 1}</td>
                                <td class="text-start">${value.item}</td>
                                <td class="text-start">${value.stockReturned}</td>
                                <td class="text-start">${value.information}</td>
                                <td class="text-start">
                                   
                                    <a href="javascript:void(0)" id="btn_delete_sales_refunded" data-id="${value.id}" class="btn btn-danger btn-icon pt-2">
                                        <i class="mdi mdi-delete-outline"></i>
                                    </a>
                                </td>
                            </tr>
                        `;
                        table.row.add($(data)).draw(false); // Add new row to DataTable
                    });
                }
            });
        }

        // Load data when the page is ready
        loadDataTable();

        // Clear value form input
        function clearForm() {
            $('#TransactionId').val('');
            $('#StockReturned').val('');
            $('#Information').val('');
        }

        // Show modal to add a new sales_refunded
        $('body').on('click', '#btn_add_sales_refunded', function () {
            $('#modal_add_sales_refunded').modal('show');
            clearForm();
        });

        // Add a new sales_refunded
        $('#Store').click(function (e) {
            e.preventDefault();

            let TransactionId = $('#TransactionId').val();
            let StockReturned = $('#StockReturned').val();
            let Information = $('#Information').val();
            let formData = new FormData();

            formData.append('TransactionId', TransactionId);
            formData.append('StockReturned', StockReturned);
            formData.append('Information', Information);
            formData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());

            $.ajax({
                url: '/SalesRefunded/Create',
                type: "POST",
                cache: false,
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: response.message,
                            showConfirmButton: true,
                            timer: 3000
                        });

                        $('#modal_add_sales_refunded').modal('hide'); // Hide modal
                        loadDataTable(); // Reload data
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message,
                        });
                    }
                }
            });
        });

       
        // Delete a item
            $('body').on('click', '#btn_delete_sales_refunded', function () {
        let id = $(this).data('id');

        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // Ambil token CSRF dari form
                let token = $('input[name="__RequestVerificationToken"]').val();

                console.log("ID: ", id);                  // Debug ID
                console.log("Token: ", token);            // Debug CSRF Token

                $.ajax({
                    url: '/SalesRefunded/Delete',
                    type: 'POST',
                    data: {
                        id: id,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: response.message,
                                timer: 3000
                            });
                            loadDataTable();
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message,
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);  // Debug error
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while deleting.',
                        });
                    }
                });
            }
        });
    });

    });

</script>

